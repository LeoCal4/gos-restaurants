openapi: 3.0.1
info:
  title: Restaurants Service API
  description: Restaurants from GoOutSafe with Microservices
  version: "0.1"
servers:
- url: /

paths:
  
  /restaurant:
    post:
      tags:
      - Restaurants
      summary: Creates restaurant
      operationId: restaurants.resources.restaurants.post_add
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  address:
                    type: string
                  city:
                    type: string
                  phone:
                    type: string
                  menu_type:
                    type: string
                  op_id:
                    type: integer
                required:
                  - name
                  - address
                  - city
                  - phone
                  - menu_type
                  - op_id
      responses:
        200:
          description: Restaurant successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the data validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Error in saving the restaurant in the db
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  
  /restaurant/{restaurant_id}:
    get:
      tags:
      - Restaurants
      summary: Get a single restaurant
      operationId: restaurants.resources.restaurants.restaurant_sheet
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's Unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return restaurant
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - restaurant_sheet
                properties:
                  restaurant_sheet:
                    type: object
                    required:
                      - restaurant
                      - average_rate
                      - max_rate
                      - is_open
                    properties:
                      restaurant:
                        $ref: '#/components/schemas/Restaurant'
                      average_rate:
                        description: Average rate of the restaurant
                        type: number
                      max_rate:
                        description: Max rating of the restaurant
                        type: integer
                      is_open:
                        description: The restaurant is open or not
                        type: boolean
                  status:
                    type: string
                  message:
                    type: string
        400:
          description: Restaurant_id is not linked to any restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
        - Restaurants
      summary: Edits the restaurant specified by the restaurant_id
      operationId: restaurants.resources.restaurants.put_edit_restaurant
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                city:
                  type: string
                phone:
                  type: string
                menu_type:
                  type: string
              required:
                - name
                - address
                - city
                - phone
                - menu_type
      responses:
        200:
          description: Restaurant correctly modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Can't modify restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
        - Restaurants
      summary: Edits the restaurant specified by the restaurant_id  
      operationId: restaurants.resources.restaurants.delete_restaurant
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Restaurant correctly deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Can't delete restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/by_operator_id/{op_id}:
    get:
      tags:
      - Restaurants
      summary: Get a single restaurant
      operationId: restaurants.resources.restaurants.get_by_op_id
      parameters:
      - name: op_id
        in: path
        description: Operator's unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return restaurant
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - restaurant_sheet
                properties:
                  restaurant_sheet:
                    type: object
                    required:
                      - restaurant
                      - average_rate
                      - max_rate
                      - is_open
                    properties:
                      restaurant:
                        $ref: '#/components/schemas/Restaurant'
                      average_rate:
                        description: Average rate of the restaurant
                        type: number
                      max_rate:
                        description: Max rating of the restaurant
                        type: integer
                      is_open:
                        description: The restaurant is open or not
                        type: boolean
                  status:
                    type: string
                  message:
                    type: string
        400:
          description: Restaurant_id is not linked to any restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/all:
    get:
      tags:
      - Restaurants
      summary: Get all restaurant
      operationId: restaurants.resources.restaurants.get_all_restaurants
      responses:
        200:
          description: Return all restaurants
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - restaurants
                properties:
                  restaurants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Restaurant'
                  status:
                    type: string
                  message:
                    type: string
        500:
          description: Error in retrieving all restaurants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/search_by/{search_filter}/{search_field}:
    get:
      tags:
      - Restaurants
      summary: Get the restaurant included in the specified search
      operationId: restaurants.resources.restaurants.search_by
      parameters:
      - name: search_filter
        in: path
        description: Search field inserted by the user
        required: true
        schema:
          type: string
      - name: search_field
        in: path
        description: Search filter chosen among the one proposed
        required: true
        schema:
          type: string
      responses:
        200:
          description: Return all restaurants from the specified search
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - restaurants
                properties:
                  restaurants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Restaurant'
                  status:
                    type: string
                  message:
                    type: string
        400:
          description: Error in retrieving the restaurants 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/like/{restaurant_id}:
    put:
      tags:
      - Restaurants
      summary: Toggle the like on a restaurant
      operationId: restaurants.resources.restaurants.like_toggle
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                required:
                  - user_id
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's Unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: The like was correctly toggled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: User id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Error in toggling the like
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/tables/{restaurant_id}:
    post:
      tags:
        - Restaurants
      summary: Adds tables to the restaurants 
      operationId: restaurants.resources.restaurants.add_tables
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                  max_capacity:
                    type: integer
                required:
                  - number
                  - max_capacity
      responses:
        200:
          description: Table successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Value Error in the tables' capacities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Error in DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  
  /restaurant/time/{restaurant_id}:
    post:
      tags:
        - Restaurants
      summary: Adds availabilties to the restaurant specified by the restaurant_id
      operationId: restaurants.resources.restaurants.add_time
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  day:
                    type: string
                  start_time:
                    type: string
                  end_time:
                    type: string
                required:
                  - day
                  - start_time
                  - end_time
      responses:
        200:
          description: Availability successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Can't add new availability
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  
  /restaurant/measure/{restaurant_id}:
    put:
      tags:
        - Restaurants
      summary: Adds security measures to the restaurant specified by the restaurant_id
      operationId: restaurants.resources.restaurants.add_measure
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  measure:
                    type: string
                required:
                  - measure
      responses:
        200:
          description: Measure correctly added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Can't add measure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/avg_stay/{restaurant_id}:
    put:
      tags:
        - Restaurants
      summary: Adds average stay time to the restaurant specified by the restaurant_id
      operationId: restaurants.resources.restaurants.add_avg_stay
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  hours:
                    type: integer
                  minutes:
                    type: integer
                required:
                  - hours
                  - minutes
      responses:
        200:
          description: Average stay time successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Can't add new average stay time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
  /restaurant/review:
    post:
      tags:
        - Restaurants
      summary: Creates a new review for the restaurant
      operationId: restaurants.resources.restaurants.add_review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_id:
                  type: integer
                customer_id:
                  type: integer
                customer_name:
                  type: string
                value:
                  type: integer
                review:
                  type: string
              required:
                - restaurant_id
                - customer_id
                - customer_name
                - value
                - review
      responses:
        200:
          description: Review already added
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - already_written
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  details:
                    type: boolean
        201:
          description: Review correctly added
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - already_written
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  details:
                    type: boolean
        400:
          description: Can't modify restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /restaurant/rating_bounds:
    get:
      tags:
      - Restaurants
      summary: Get the min and the max bounds for the ratings
      operationId: restaurants.resources.restaurants.get_rating_bounds
      responses:
        200:
          description: Return restaurant
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - bounds
                properties:
                  bounds:
                    type: object
                    required:
                      - min_value
                      - max_value
                    properties:
                      min_value:
                        description: Min value for the rating of a restaurant
                        type: integer
                      max_value:
                        description: Max value for the rating of a restaurant
                        type: integer
                  status:
                    type: string
                  message:
                    type: string

components:
  schemas:

    Restaurant:
      description: The restaurant model
      required:
      - id
      - name
      - address
      - city
      - lat
      - lon
      - phone
      - owner_id
      - tables
      - availabilities
      - ratings
      - likes
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Restaurant's name
          example: "My Pizza Restaurant"
        address:
          maxLength: 100
          minLength: 1
          type: string
          description: Restaurant's address
          example: "Via dei Panini, 3"
        city:
          maxLength: 100
          minLength: 1
          type: string
          description: Restaurant's city
          example: "Pisa"
        lat:
          type: number
          description: Restaurant Latitude
          example: 42.42
        lon:
          type: number
          description: Restaurant Longitude
          example: 42.42
        phone:
          type: string
          minLength: 5
          maxLength: 50
          description: Restaurant Phone Number
          example: "050123456"
        owner_id:
          type: integer
          description: Unique owner identifier
          example: 123
        tables:
          type: array
          items:
            $ref: '#/components/schemas/Table'
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/RestaurantAvailability'
        ratings:
          type: array
          items:
            $ref: '#/components/schemas/RestaurantRating'
        likes:
          type: array
          items:
            $ref: '#/components/schemas/RestaurantLike'
    
    Table:
      description: The restaurant's table model
      required:
        - id
        - restaurant_id
        - capacity
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        restaurant_id:
          type: integer
          description: Restaurant's Unique Identifier
          example: 123
        capacity:
          type: integer
          description: The table max capacity
          minimum: 1
          maximum: 15
          example: 6
    
    RestaurantAvailability:
      description: The restaurant opening time model
      required:
        - id
        - start_time
        - end_time
        - day
        - restaurant_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        start_time:
          type: string
          description: The opening time start time (hour)
          example: "09:00"
        end_time:
          type: string
          description: The opening time end time (hour)
          example: "12:00"
        day:
          type: string
          description: The opening time week day
          pattern: '(Mon|Tues|Wednes|Thurs|Fri|Satur|Sun)day'
          example: "Tuesday"
        restaurant_id:
          type: integer
          description: Restaurant's Unique Identifier
          example: 123

    RestaurantRating:
      description: The restaurant rating
      required:
        - customer_id
        - restaurant_id
        - value
        - review
        - timestamp
      type: object
      properties:
        customer_id:
          type: integer
          description: Customer unique identifier
          readOnly: true
          example: 123
        restaurant_id:
          type: integer
          description: Restaurant's Unique Identifier
          readOnly: true
          example: 123
        customer_name:
          type: string
          description: Customer name
          example: 'Musca'
        value:
          type: integer
          description: Value of the rating
          minimum: 0
          maximum: 10
          example: 6
        review:
          type: string
          description: Text of the review
          example: "Very good!"
        timestamp:
          type: string
          description: Timestamp of the like creation   

    RestaurantLike:
      description: The restaurant like
      type: object
      required:
        - liker_id
        - restaurant_id
        - timestamp
      properties:
        liker_id:
          type: integer
          description: Unique identifier of the customer 
          example: 123
        restaurant_id:
          type: integer
          description: Unique identifier of the restaurant
          example: 123
        timestamp:
          type: string
          description: Timestamp of the like creation      
    
    Response:
      description: Standard json response template
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          example: 'Success'
        message:
          type: string
          example: 'Restaurant successfully added'
